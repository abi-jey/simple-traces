import { RefObject, useEffect } from 'react'

export function useInfiniteScroll({
  root,
  sentinel,
  canLoad,
  onLoad,
  rootMargin = '0px',
  threshold = 0.1,
}: {
  root: RefObject<Element | null>
  sentinel: RefObject<Element | null>
  canLoad: boolean
  onLoad: () => void
  rootMargin?: string
  threshold?: number | number[]
}) {
  useEffect(() => {
    if (!sentinel.current) return
    if (!canLoad) return

    const io = new IntersectionObserver(
      (entries) => {
        const entry = entries[0]
        if (entry.isIntersecting && canLoad) onLoad()
      },
      { root: root.current ?? null, rootMargin, threshold }
    )

    io.observe(sentinel.current)
    return () => io.disconnect()
  }, [root, sentinel, canLoad, onLoad, rootMargin, threshold])
}

// Generated by Copilot